name: Docker Build and Push

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag'
        required: true
        default: 'latest'

env:
  REGISTRY: docker.io
  IMAGE_NAME: adhamafis/curiopay

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: curiopay
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.event.inputs.tag || github.ref_name }}
            type=sha,format=short
            type=ref,event=branch

      - name: Build and push development image
        uses: docker/build-push-action@v5
        with:
          context: .
          target: development
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test container with database
        run: |
          # Create a test environment file
          echo "DATABASE_URL=postgresql://postgres:postgres@postgres:5432/curiopay" > .env.test
          
          # Start the test container with database connection
          docker run --rm --network host \
            --env-file .env.test \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.tag || github.ref_name }} \
            sh -c "npx wait-on tcp:postgres:5432 && npx prisma db push"
          
          # Clean up
          rm .env.test 